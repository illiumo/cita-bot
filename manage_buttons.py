# -*- coding: utf-8 -*-
import json
import os
import telebot
from telebot.types import (ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton)
from db_manager import add_subscription

# A dictionary with all the languages listed
translations = {
    "en": {
        "start": """‚úÖ We do not sell seats or support illegal markets.\n‚úÖ Our service provides notifications about available slots, simplifying the booking process.\n‚úÖ We do not collect your personal data except for minimal information passed through Telegram, necessary for proper service operation.\n‚úÖ We guarantee service stability and provide a full refund if no notifications are sent within your subscription period.\n‚úÖ We do not guarantee booking success as it depends on your actions. However, most users make a booking within a week.\n‚úÖ The service is provided "as is" without additional guarantees, except in cases explicitly stated in these terms.\n‚úÖ To switch the bot language, use the /language command.""",
        "select_language": "Select your language:",
        "terms": """‚úÖ We do not sell seats or support illegal markets.\n‚úÖ Our service provides notifications about available slots, simplifying the booking process.\n‚úÖ We do not collect your personal data except for minimal information passed through Telegram, necessary for proper service operation.\n‚úÖ We guarantee service stability and provide a full refund if no notifications are sent within your subscription period.\n‚úÖ We do not guarantee booking success as it depends on your actions. However, most users make a booking within a week.\n‚úÖ The service is provided "as is" without additional guarantees, except in cases explicitly stated in these terms.""",
        "choose_province": "üìç Please select a province:",
        "next": "Next ‚û°Ô∏è",
    },
    "ru": {
        "start": """‚úÖ –ú—ã –Ω–µ –ø—Ä–æ–¥–∞–µ–º —Å–∏—Ç—ã –∏ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –Ω–µ–ª–µ–≥–∞–ª—å–Ω—ã–π —Ä—ã–Ω–æ–∫ –∑–∞–ø–∏—Å–µ–π.\n‚úÖ –ù–∞—à —Å–µ—Ä–≤–∏—Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é —É—Å–ª—É–≥—É ‚Äì —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ—è–≤–ª–µ–Ω–∏–∏ —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å–∏—Ç, —á—Ç–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ø—Ä–æ—â–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø–∏—Å–∏.\n‚úÖ –ú—ã –Ω–µ —Å–æ–±–∏—Ä–∞–µ–º –≤–∞—à–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–æ–π Telegram, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–∏—Å–∞.\n‚úÖ –ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–µ—Ä–Ω–µ–º –¥–µ–Ω—å–≥–∏, –µ—Å–ª–∏ –∑–∞ –≤–µ—Å—å —Å—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–º –Ω–∏ –æ–¥–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.\n‚úÖ –ú—ã –Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–∞—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π. –û–¥–Ω–∞–∫–æ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Ñ–æ—Ä–º–ª—è—é—Ç –∑–∞–ø–∏—Å—å –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏.\n‚úÖ –°–µ—Ä–≤–∏—Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è \"–∫–∞–∫ –µ—Å—Ç—å\", –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≥–∞—Ä–∞–Ω—Ç–∏–π, –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º —Å–ª—É—á–∞–µ–≤, –ø—Ä—è–º–æ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –≤ –¥–∞–Ω–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö.\n‚úÖ –ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ –±–æ—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /language.""",
        "select_language": "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:",
        "terms": """‚úÖ –ú—ã –Ω–µ –ø—Ä–æ–¥–∞–µ–º —Å–∏—Ç—ã –∏ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –Ω–µ–ª–µ–≥–∞–ª—å–Ω—ã–π —Ä—ã–Ω–æ–∫ –∑–∞–ø–∏—Å–µ–π.\n‚úÖ –ù–∞—à —Å–µ—Ä–≤–∏—Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é —É—Å–ª—É–≥—É ‚Äì —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ—è–≤–ª–µ–Ω–∏–∏ —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å–∏—Ç, —á—Ç–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ø—Ä–æ—â–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø–∏—Å–∏.\n‚úÖ –ú—ã –Ω–µ —Å–æ–±–∏—Ä–∞–µ–º –≤–∞—à–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–æ–π Telegram, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–∏—Å–∞.\n‚úÖ –ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–µ—Ä–Ω–µ–º –¥–µ–Ω—å–≥–∏, –µ—Å–ª–∏ –∑–∞ –≤–µ—Å—å —Å—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–º –Ω–∏ –æ–¥–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.\n‚úÖ –ú—ã –Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–∞—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π. –û–¥–Ω–∞–∫–æ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Ñ–æ—Ä–º–ª—è—é—Ç –∑–∞–ø–∏—Å—å –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏.\n‚úÖ –°–µ—Ä–≤–∏—Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è \"–∫–∞–∫ –µ—Å—Ç—å\", –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≥–∞—Ä–∞–Ω—Ç–∏–π, –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º —Å–ª—É—á–∞–µ–≤, –ø—Ä—è–º–æ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –≤ –¥–∞–Ω–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö.""",
        "choose_province": "üìç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≤–∏–Ω—Ü–∏—é:",
        "next": "–î–∞–ª–µ–µ ‚û°Ô∏è",
    },
    "es": {
        "start": """‚úÖ No vendemos asientos ni apoyamos mercados ilegales.\n‚úÖ Nuestro servicio proporciona notificaciones sobre espacios disponibles, simplificando el proceso de reserva.\n‚úÖ No recopilamos sus datos personales, excepto la informaci√≥n m√≠nima pasada por Telegram, necesaria para el funcionamiento correcto del servicio.\n‚úÖ Garantizamos la estabilidad del servicio y brindamos un reembolso completo si no se env√≠an notificaciones dentro de su per√≠odo de suscripci√≥n.\n‚úÖ No garantizamos el √©xito de la reserva, ya que depende de sus acciones. Sin embargo, la mayor√≠a de los usuarios hacen una reserva dentro de una semana.\n‚úÖ El servicio se proporciona "tal cual" sin garant√≠as adicionales, excepto en los casos que se indiquen expl√≠citamente en estos t√©rminos.\n‚úÖ Para cambiar el idioma del bot, use el comando /language.""",
        "select_language": "Selecciona tu idioma:",
        "terms": """‚úÖ No vendemos asientos ni apoyamos mercados ilegales.\n‚úÖ Nuestro servicio proporciona notificaciones sobre espacios disponibles, simplificando el proceso de reserva.\n‚úÖ No recopilamos sus datos personales, excepto la informaci√≥n m√≠nima pasada por Telegram, necesaria para el funcionamiento correcto del servicio.\n‚úÖ Garantizamos la estabilidad del servicio y brindamos un reembolso completo si no se env√≠an notificaciones dentro de su per√≠odo de suscripci√≥n.\n‚úÖ No garantizamos el √©xito de la reserva, ya que depende de sus acciones. Sin embargo, la mayor√≠a de los usuarios hacen una reserva dentro de una semana.\n‚úÖ El servicio se proporciona "tal cual" sin garant√≠as adicionales, excepto en los casos que se indiquen expl√≠citamente en estos t√©rminos.""",
        "choose_province": "üìç Por favor selecciona una provincia:",
        "next": "Siguiente ‚û°Ô∏è",
    },
    "ua": {
        "start": """‚úÖ –ú–∏ –Ω–µ –ø—Ä–æ–¥–∞—î–º–æ –º—ñ—Å—Ü—è –π –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î–º–æ –Ω–µ–∑–∞–∫–æ–Ω–Ω–∏–π —Ä–∏–Ω–æ–∫ –∑–∞–ø–∏—Å—ñ–≤.\n‚úÖ –ù–∞—à —Å–µ—Ä–≤—ñ—Å –Ω–∞–¥–∞—î –ø–æ—Å–ª—É–≥—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –¥–æ—Å—Ç—É–ø–Ω—ñ –º—ñ—Å—Ü—è, —â–æ –∑–Ω–∞—á–Ω–æ —Å–ø—Ä–æ—â—É—î –ø—Ä–æ—Ü–µ—Å –∑–∞–ø–∏—Å—É.\n‚úÖ –ú–∏ –Ω–µ –∑–±–∏—Ä–∞—î–º–æ –≤–∞—à—ñ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ, –∑–∞ –≤–∏–∫–ª—é—á–µ–Ω–Ω—è–º –º—ñ–Ω—ñ–º–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó, —è–∫—É –ø–µ—Ä–µ–¥–∞—î Telegram, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—ó –¥–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ—ó —Ä–æ–±–æ—Ç–∏ —Å–µ—Ä–≤—ñ—Å—É.\n‚úÖ –ú–∏ –≥–∞—Ä–∞–Ω—Ç—É—î–º–æ —Å—Ç–∞–±—ñ–ª—å–Ω—ñ—Å—Ç—å —Ä–æ–±–æ—Ç–∏ –π –Ω–∞–¥–∞—î–º–æ –ø–æ–≤–Ω–µ –≤—ñ–¥—à–∫–æ–¥—É–≤–∞–Ω–Ω—è, —è–∫—â–æ –ø—Ä–æ—Ç—è–≥–æ–º —Ç–µ—Ä–º—ñ–Ω—É –ø—ñ–¥–ø–∏—Å–∫–∏ –Ω–µ –±—É–¥–µ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∂–æ–¥–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.\n‚úÖ –ú–∏ –Ω–µ –≥–∞—Ä–∞–Ω—Ç—É—î–º–æ —É—Å–ø—ñ—à–Ω–æ–≥–æ –∑–∞–ø–∏—Å—É, –æ—Å–∫—ñ–ª—å–∫–∏ —Ü–µ –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ –≤–∞—à–∏—Ö –¥—ñ–π. –û–¥–Ω–∞–∫ –±—ñ–ª—å—à—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞–ø–∏—Å—É—é—Ç—å—Å—è –ø—Ä–æ—Ç—è–≥–æ–º —Ç–∏–∂–Ω—è.\n‚úÖ –°–µ—Ä–≤—ñ—Å –Ω–∞–¥–∞—î—Ç—å—Å—è "—è–∫ —î" –±–µ–∑ –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –≥–∞—Ä–∞–Ω—Ç—ñ–π, –∑–∞ –≤–∏–Ω—è—Ç–∫–æ–º –≤–∏–ø–∞–¥–∫—ñ–≤, –ø—Ä—è–º–æ –∑–∞–∑–Ω–∞—á–µ–Ω–∏—Ö —É —Ü–∏—Ö —É–º–æ–≤–∞—Ö.\n‚úÖ –©–æ–± –∑–º—ñ–Ω–∏—Ç–∏ –º–æ–≤—É –±–æ—Ç–∞, —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –∫–æ–º–∞–Ω–¥–æ—é /language.""",
        "select_language": "–û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É:",
        "terms": """‚úÖ –ú–∏ –Ω–µ –ø—Ä–æ–¥–∞—î–º–æ –º—ñ—Å—Ü—è –π –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î–º–æ –Ω–µ–∑–∞–∫–æ–Ω–Ω–∏–π —Ä–∏–Ω–æ–∫ –∑–∞–ø–∏—Å—ñ–≤.\n‚úÖ –ù–∞—à —Å–µ—Ä–≤—ñ—Å –Ω–∞–¥–∞—î –ø–æ—Å–ª—É–≥—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –¥–æ—Å—Ç—É–ø–Ω—ñ –º—ñ—Å—Ü—è, —â–æ –∑–Ω–∞—á–Ω–æ —Å–ø—Ä–æ—â—É—î –ø—Ä–æ—Ü–µ—Å –∑–∞–ø–∏—Å—É.\n‚úÖ –ú–∏ –Ω–µ –∑–±–∏—Ä–∞—î–º–æ –≤–∞—à—ñ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ, –∑–∞ –≤–∏–∫–ª—é—á–µ–Ω–Ω—è–º –º—ñ–Ω—ñ–º–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó, —è–∫—É –ø–µ—Ä–µ–¥–∞—î Telegram, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—ó –¥–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ—ó —Ä–æ–±–æ—Ç–∏ —Å–µ—Ä–≤—ñ—Å—É.\n‚úÖ –ú–∏ –≥–∞—Ä–∞–Ω—Ç—É—î–º–æ —Å—Ç–∞–±—ñ–ª—å–Ω—ñ—Å—Ç—å —Ä–æ–±–æ—Ç–∏ –π –Ω–∞–¥–∞—î–º–æ –ø–æ–≤–Ω–µ –≤—ñ–¥—à–∫–æ–¥—É–≤–∞–Ω–Ω—è, —è–∫—â–æ –ø—Ä–æ—Ç—è–≥–æ–º —Ç–µ—Ä–º—ñ–Ω—É –ø—ñ–¥–ø–∏—Å–∫–∏ –Ω–µ –±—É–¥–µ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∂–æ–¥–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.\n‚úÖ –ú–∏ –Ω–µ –≥–∞—Ä–∞–Ω—Ç—É—î–º–æ —É—Å–ø—ñ—à–Ω–æ–≥–æ –∑–∞–ø–∏—Å—É, –æ—Å–∫—ñ–ª—å–∫–∏ —Ü–µ –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ –≤–∞—à–∏—Ö –¥—ñ–π. –û–¥–Ω–∞–∫ –±—ñ–ª—å—à—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞–ø–∏—Å—É—é—Ç—å—Å—è –ø—Ä–æ—Ç—è–≥–æ–º —Ç–∏–∂–Ω—è.\n‚úÖ –°–µ—Ä–≤—ñ—Å –Ω–∞–¥–∞—î—Ç—å—Å—è "—è–∫ —î" –±–µ–∑ –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –≥–∞—Ä–∞–Ω—Ç—ñ–π, –∑–∞ –≤–∏–Ω—è—Ç–∫–æ–º –≤–∏–ø–∞–¥–∫—ñ–≤, –ø—Ä—è–º–æ –∑–∞–∑–Ω–∞—á–µ–Ω–∏—Ö —É —Ü–∏—Ö —É–º–æ–≤–∞—Ö.""",
        "choose_province": "üìç –ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –ø—Ä–æ–≤—ñ–Ω—Ü—ñ—é:",
        "next": "–î–∞–ª—ñ ‚û°Ô∏è",
    },
}

language_file = "user_lang.json"
if not os.path.exists(language_file):
    with open(language_file, "w") as f:
        json.dump({}, f)


def load_user_lang():
    with open(language_file, "r") as f:
        return json.load(f)

def save_user_lang():
    with open(language_file, "w") as f:
        json.dump(user_lang, f)

user_lang = load_user_lang();

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = "8029955410:AAELfmyIB8VriWQqfYimN4RCVzKSMHKsr9s"
bot = telebot.TeleBot(TOKEN)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu = ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.add("/start", "/language", "/terms")
main_menu.add("/add_subscription")
main_menu.add("/my_subscriptions", "/manage_subscriptions")

# –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ–≤–∏–Ω—Ü–∏–π
all_provinces = [
    "A Coru√±a", "Albacete", "Alicante", "Almer√≠a", "Araba", "Asturias", "√Åvila", "Badajoz",
    "Barcelona", "Bizkaia", "Burgos", "C√°ceres", "C√°diz", "Cantabria", "Castell√≥n", "Ceuta",
    "Ciudad Real", "C√≥rdoba", "Cuenca", "Gipuzkoa", "Girona", "Granada", "Guadalajara", "Huelva",
    "Huesca", "Illes Balears", "Ja√©n", "La Rioja", "Las Palmas", "Le√≥n", "Lleida", "Lugo",
    "Madrid", "M√°laga", "Melilla", "Murcia", "Navarra", "Ourense", "Palencia", "Pontevedra",
    "Salamanca", "S.Cruz Tenerife", "Segovia", "Sevilla", "Soria", "Tarragona", "Teruel", "Toledo",
    "Valencia", "Valladolid", "Zamora", "Zaragoza"
]


@bot.message_handler(commands=['start'])
def handle_start(message):
    user_id = message.chat.id
    bot.send_message(user_id, get_translation(user_id, "start"), reply_markup=main_menu)

@bot.message_handler(commands=["language"])
def language(message):
    lang_menu = InlineKeyboardMarkup()
    lang_menu.add(InlineKeyboardButton("üá™üá∏ Espa√±ol", callback_data="lang_es"))
    lang_menu.add(InlineKeyboardButton("üá¨üáß English", callback_data="lang_en"))
    lang_menu.add(InlineKeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π", callback_data="lang_ru"))
    lang_menu.add(InlineKeyboardButton("üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞", callback_data="lang_ua"))
    bot.send_message(message.chat.id, get_translation(message.chat.id, "select_language"), reply_markup=lang_menu)


# –†–∞–∑–±–∏–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–≤–∏–Ω—Ü–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
PROVINCES_PER_PAGE = 8
user_states = {}

def get_province_page(page=0):
    start = page * PROVINCES_PER_PAGE
    end = start + PROVINCES_PER_PAGE
    return all_provinces[start:end]

@bot.message_handler(commands=["terms"])
def handle_terms(message):
    user_id = message.chat.id
    bot.send_message(user_id, get_translation(user_id, "terms"))

@bot.message_handler(commands=['add_subscription'])
def add_subscription(message, page=0, message_id=None):
    provinces_menu = InlineKeyboardMarkup(row_width=2)
    provinces = get_province_page(page)
    buttons = [InlineKeyboardButton(province, callback_data=f"sub_{province}") for province in provinces]
    provinces_menu.add(*buttons)

    if (page + 1) * PROVINCES_PER_PAGE < len(all_provinces):
        provinces_menu.add(InlineKeyboardButton("–î–∞–ª–µ–µ ‚û°Ô∏è", callback_data=f"sub_next_{page + 1}"))

    if message_id:
        bot.edit_message_reply_markup(message.chat.id, message_id, reply_markup=provinces_menu)
    else:
        sent_message = bot.send_message(message.chat.id, "üìç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≤–∏–Ω—Ü–∏—é:",
                                        reply_markup=provinces_menu)
        bot.register_next_step_handler(sent_message, add_subscription, page=page, message_id=sent_message.message_id)


@bot.callback_query_handler(func=lambda call: call.data.startswith("sub_next_"))
def next_page_callback(call):
    page = int(call.data.split("_")[-1])
    add_subscription(call.message, page=page, message_id=call.message.message_id)
    bot.answer_callback_query(call.id)

@bot.callback_query_handler(func=lambda call: call.data.startswith("lang_"))
def set_language(call):
    lang_code = call.data.split("_")[-1]
    user_lang[call.message.chat.id] = lang_code
    save_user_lang()
    bot.send_message(call.id, "Language updated!")
    bot.send_message(
        call.message.chat.id,
        get_translation(call.message.chat.id, "start"),
        reply_markup=main_menu,
    )


def get_translation(user_id, k):
    lang = user_lang.get(user_id, "en")
    return translations.get(lang, {}).get(k, "Translation not found!")


def ask_all_addresses(chat_id):
    markup = InlineKeyboardMarkup()
    markup.add(
        InlineKeyboardButton("–í—Å–µ –∞–¥—Ä–µ—Å–∞", callback_data="addresses_all"),
        InlineKeyboardButton("–£–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å–∞", callback_data="addresses_custom")
    )
    bot.send_message(chat_id, "–•–æ—Ç–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –≤—Å–µ –∞–¥—Ä–µ—Å–∞ –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ?", reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data == "addresses_all")
def addresses_all_handler(call):
    user_states[call.message.chat.id]['addresses'] = ['ALL']
    finalize_subscription(call.message)


@bot.callback_query_handler(func=lambda call: call.data == "addresses_custom")
def addresses_custom_handler(call):
    bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –∞–¥—Ä–µ—Å–æ–≤ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é): ")
    bot.register_next_step_handler(call.message, save_addresses)


def save_addresses(message):
    addresses = [addr.strip() for addr in message.text.split(",") if addr.strip()]
    user_states[message.chat.id]['addresses'] = addresses
    finalize_subscription(message)


def finalize_subscription(message):
    chat_id = message.chat.id
    data = user_states[chat_id]
    province = data['province']
    procedure = data['procedure']
    addresses = data['addresses']

    service_name = "7 –¥–Ω–µ–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞"
    phone_number = ""
    user_id = chat_id
    telegram_handle = f"@{message.from_user.username}" if message.from_user.username else ""

    added_sub = add_subscription(user_id, telegram_handle, phone_number, service_name, province, procedure, addresses,
                                 7)

    bot.send_message(chat_id, f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞!\n\n{added_sub}", reply_markup=main_menu)
    user_states.pop(chat_id, None)


if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.polling(none_stop=True)




if __name__ == "__main__":
    bot.polling(none_stop=True)
