import telebot
from telebot.types import (ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = "TOKEN"
bot = telebot.TeleBot(TOKEN)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu = ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.add("/start", "/language", "/terms")
main_menu.add("/add_subscription")
main_menu.add("/my_subscriptions", "/manage_subscriptions")

# –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ–≤–∏–Ω—Ü–∏–π
all_provinces = [
    "A Coru√±a", "Albacete", "Alicante", "Almer√≠a", "Araba", "Asturias", "√Åvila", "Badajoz",
    "Barcelona", "Bizkaia", "Burgos", "C√°ceres", "C√°diz", "Cantabria", "Castell√≥n", "Ceuta",
    "Ciudad Real", "C√≥rdoba", "Cuenca", "Gipuzkoa", "Girona", "Granada", "Guadalajara", "Huelva",
    "Huesca", "Illes Balears", "Ja√©n", "La Rioja", "Las Palmas", "Le√≥n", "Lleida", "Lugo",
    "Madrid", "M√°laga", "Melilla", "Murcia", "Navarra", "Ourense", "Palencia", "Pontevedra",
    "Salamanca", "S.Cruz Tenerife", "Segovia", "Sevilla", "Soria", "Tarragona", "Teruel", "Toledo",
    "Valencia", "Valladolid", "Zamora", "Zaragoza"
]

@bot.message_handler(commands=['language'])
def language(message):
    lang_menu = InlineKeyboardMarkup()
    lang_menu.add(InlineKeyboardButton("üá™üá∏ Espa√±ol", callback_data="lang_es"))
    lang_menu.add(InlineKeyboardButton("üá¨üáß English", callback_data="lang_en"))
    lang_menu.add(InlineKeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π", callback_data="lang_ru"))
    lang_menu.add(InlineKeyboardButton("üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞", callback_data="lang_ua"))
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:", reply_markup=lang_menu)


# –†–∞–∑–±–∏–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–≤–∏–Ω—Ü–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
PROVINCES_PER_PAGE = 8


def get_province_page(page=0):
    start = page * PROVINCES_PER_PAGE
    end = start + PROVINCES_PER_PAGE
    return all_provinces[start:end]

@bot.message_handler(commands=["terms"])
def handle_terms(message):
    lang_menu = InlineKeyboardMarkup()
    bot.send_message(message.chat.id, '‚úÖ –ú—ã –Ω–µ –ø—Ä–æ–¥–∞–µ–º —Å–∏—Ç—ã –∏ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –Ω–µ–ª–µ–≥–∞–ª—å–Ω—ã–π —Ä—ã–Ω–æ–∫ –∑–∞–ø–∏—Å–µ–π. –í—ã –±—Ä–æ–Ω–∏—Ä—É–µ—Ç–µ –∏—Ö —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ.\n‚úÖ –ù–∞—à —Å–µ—Ä–≤–∏—Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é —É—Å–ª—É–≥—É ‚Äì —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ—è–≤–ª–µ–Ω–∏–∏ —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å–∏—Ç, —á—Ç–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ø—Ä–æ—â–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø–∏—Å–∏.\n‚úÖ –ú—ã –Ω–µ —Å–æ–±–∏—Ä–∞–µ–º –≤–∞—à–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–æ–π Telegram, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–∏—Å–∞.\n‚úÖ –ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–µ—Ä–Ω–µ–º –¥–µ–Ω—å–≥–∏, –µ—Å–ª–∏ –∑–∞ –≤–µ—Å—å —Å—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–º –Ω–∏ –æ–¥–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.\n‚úÖ –ú—ã –Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–∞—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π. –û–¥–Ω–∞–∫–æ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Ñ–æ—Ä–º–ª—è—é—Ç –∑–∞–ø–∏—Å—å –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏.\n‚úÖ –°–µ—Ä–≤–∏—Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è "–∫–∞–∫ –µ—Å—Ç—å", –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≥–∞—Ä–∞–Ω—Ç–∏–π, –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º —Å–ª—É—á–∞–µ–≤, –ø—Ä—è–º–æ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –≤ –¥–∞–Ω–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö.',reply_markup=lang_menu)
@bot.message_handler(commands=['add_subscription'])
def add_subscription(message, page=0, message_id=None):
    provinces_menu = InlineKeyboardMarkup(row_width=2)
    provinces = get_province_page(page)
    buttons = [InlineKeyboardButton(province, callback_data=f"sub_{province}") for province in provinces]
    provinces_menu.add(*buttons)

    if (page + 1) * PROVINCES_PER_PAGE < len(all_provinces):
        provinces_menu.add(InlineKeyboardButton("–î–∞–ª–µ–µ ‚û°Ô∏è", callback_data=f"sub_next_{page + 1}"))

    if message_id:
        bot.edit_message_reply_markup(message.chat.id, message_id, reply_markup=provinces_menu)
    else:
        sent_message = bot.send_message(message.chat.id, "üìç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≤–∏–Ω—Ü–∏—é:",
                                        reply_markup=provinces_menu)
        bot.register_next_step_handler(sent_message, add_subscription, page=page, message_id=sent_message.message_id)


@bot.callback_query_handler(func=lambda call: call.data.startswith("sub_next_"))
def next_page_callback(call):
    page = int(call.data.split("_")[-1])
    add_subscription(call.message, page=page, message_id=call.message.message_id)
    bot.answer_callback_query(call.id)


if __name__ == "__main__":
    bot.polling(none_stop=True)
