import json
import asyncio
import unicodedata
import random
from playwright.async_api import async_playwright
from fake_useragent import UserAgent

# –ü—Ä–æ–≤–∏–Ω—Ü–∏—è –∏ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥–µ–º –ø—Ä–æ–≤–µ—Ä—è—Ç—å
PROVINCIA = "Ceuta"
PROCEDURA = "POLIC√çA - COMUNICACI√ìN DE CAMBIO DE DOMICILIO"


USER_AGENTS = [
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36",
    "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.2 Safari/605.1.15"
]


def random_user_agent() -> str:
    return random.choice(USER_AGENTS)


async def human_delay(min_time=1.0, max_time=3.0):
    """–†–∞–Ω–¥–æ–º–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —ç–º—É–ª—è—Ü–∏–∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–∞."""
    await asyncio.sleep(random.uniform(min_time, max_time))


async def random_scroll(page):
    """–†–∞–Ω–¥–æ–º–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –∂–∏–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    scroll_distance = random.randint(200, 1200)
    await page.mouse.wheel(0, scroll_distance)
    await human_delay(0.5, 1.5)


async def random_mouse_movement(page):
    """–†–∞–Ω–¥–æ–º–Ω—ã–µ –¥–≤–∏–∂–µ–Ω–∏—è –º—ã—à–∏ –ø–æ —ç–∫—Ä–∞–Ω—É."""
    width, height = await page.evaluate("() => [window.innerWidth, window.innerHeight]")
    x, y = random.randint(50, width - 50), random.randint(50, height - 50)
    await page.mouse.move(x, y, steps=random.randint(5, 20))
    await human_delay(0.2, 0.5)


def normalize_text(text):
    """–£–¥–∞–ª—è–µ—Ç –∞–∫—Ü–µ–Ω—Ç—ã, –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã, –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –∏ —É–±–∏—Ä–∞–µ—Ç –Ω–µ–≤–∏–¥–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã."""
    text = unicodedata.normalize("NFKD", text).encode("ASCII", "ignore").decode("utf-8")
    return " ".join(text.strip().lower().split())


async def find_available_appointments(provincia, tramite):
    headers = {"User-Agent": random_user_agent(), "Accept-Language": "es-ES,es;q=0.9,en;q=0.8"}

    async with async_playwright() as p:
        browser = await p.chromium.launch(headless=False)
        context = await browser.new_context(user_agent=headers["User-Agent"])
        page = await context.new_page()

        response = await page.goto("https://icp.administracionelectronica.gob.es/icpplus/index.html",
                                   wait_until="domcontentloaded")
        if response and response.status == 429:
            print("‚ùå –ü–æ–ª—É—á–∏–ª–∏ 429 Too Many Requests. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–±–æ—Ç—É.")
            await browser.close()
            return

        await page.wait_for_selector("select#form")

        await random_mouse_movement(page)
        await random_scroll(page)

        # –í—ã–±–∏—Ä–∞–µ–º –ø—Ä–æ–≤–∏–Ω—Ü–∏—é
        provincias = await page.query_selector_all("select#form option")
        provincia_value = None
        for option in provincias:
            name = await option.inner_text()
            if normalize_text(name) == normalize_text(provincia):
                provincia_value = await option.get_attribute("value")
                break

        if not provincia_value:
            print(f"‚ùå –ü—Ä–æ–≤–∏–Ω—Ü–∏—è '{provincia}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            await browser.close()
            return

        await page.select_option("select#form", value=provincia_value)
        await human_delay()
        await page.click("input#btnAceptar")
        await page.wait_for_load_state("domcontentloaded")

        await random_scroll(page)

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –≤ –∫–∞–∫–æ–º —Å–ø–∏—Å–∫–µ –∏—Å–∫–∞—Ç—å –ø—Ä–æ—Ü–µ–¥—É—Ä—É
        tramite_0_selector = "select[name='tramiteGrupo[0]']"
        tramite_1_selector = "select[name='tramiteGrupo[1]']"

        if tramite.startswith("POLIC√çA"):
            tramites_list_selector = tramite_1_selector
        else:
            tramites_list_selector = tramite_0_selector

        await page.wait_for_selector(tramites_list_selector)
        tramites_options = await page.query_selector_all(f"{tramites_list_selector} option")

        tramite_value = None
        for option in tramites_options[1:]:  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—É—é –ø—É—Å—Ç—É—é –æ–ø—Ü–∏—é
            text = normalize_text(await option.inner_text())
            value = await option.get_attribute("value")
            if text == normalize_text(tramite):
                tramite_value = value
                break

        if not tramite_value:
            print(f"‚ùå –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ '{tramite}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ø—Ä–æ–≤–∏–Ω—Ü–∏–∏ '{provincia}'.")
            await browser.close()
            return

        # –í—ã–±–∏—Ä–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω—É—é –ø—Ä–æ—Ü–µ–¥—É—Ä—É
        await page.select_option(tramites_list_selector, value=tramite_value)
        await human_delay(1, 2)
        await page.click("input#btnAceptar")
        await page.wait_for_load_state("domcontentloaded")

        # üî¥ –ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "Entrar" –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        print("‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –∫–Ω–æ–ø–∫–æ–π 'Entrar'...")

        entrar_button = None
        try:
            entrar_button = await page.wait_for_selector("input[value='Entrar']", timeout=10000)
        except:
            print("‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ 'input[value=Entrar]' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–æ–π —Å–µ–ª–µ–∫—Ç–æ—Ä...")

        if not entrar_button:
            try:
                entrar_button = await page.wait_for_selector("button:text('Entrar')", timeout=5000)
            except:
                print("‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ 'button:text(Entrar)' —Ç–æ–∂–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")

        if entrar_button:
            print("‚úÖ –ö–Ω–æ–ø–∫–∞ 'Entrar' –Ω–∞–π–¥–µ–Ω–∞! –ù–∞–∂–∏–º–∞–µ–º...")
            await human_delay(0.5, 2.0)
            await entrar_button.click()
            await page.wait_for_load_state("domcontentloaded")
        else:
            print("‚ùå –ö–Ω–æ–ø–∫–∞ 'Entrar' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            print("üõ†Ô∏è –û—Ç–ª–∞–¥–∫–∞: —Å–æ—Ö—Ä–∞–Ω—è–µ–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ —Ñ–∞–π–ª...")
            html_content = await page.content()
            with open("debug_page.html", "w", encoding="utf-8") as f:
                f.write(html_content)
            print("üìÑ HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ debug_page.html. –ü—Ä–æ–≤–µ—Ä—å –µ–≥–æ –≤—Ä—É—á–Ω—É—é!")
            await browser.close()
            return

        print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 30 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º –±—Ä–∞—É–∑–µ—Ä–∞...")
        await asyncio.sleep(120)
        await browser.close()


# –ó–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–∞
asyncio.run(find_available_appointments(PROVINCIA, PROCEDURA))
